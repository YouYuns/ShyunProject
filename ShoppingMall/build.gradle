plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.shyun.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	//security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	
	//권한별로 메뉴바 보이게하는 라이브러리
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'com.h2database:h2'
	
	//thymeleaf layout
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	
	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	//modelmapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.6'
	
//Querydsl
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslSrcDir = 'src/main/generated'
querydsl{
	library = 'com.querydsl:querydsl-apt'
	jpa = true
	querydslSourcesDir = querydslSrcDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	querydsl.extendsFrom compileClasspath
}

sourceSets{
	main{
		java{
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}
tasks.withType(JavaCompile) {
	    options.annotationProcessorGeneratedSourcesDirectory = file(querydslSrcDir)
	}
